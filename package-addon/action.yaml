name: "ðŸ“¦ðŸ”§ Package: Addon"
description: "Packages a plugin or compiled gdextension directory and pushes it to a branch."

inputs:
  path:
    description: "The path to the addon's root directory."
    required: false
    default: .
  subfolder:
    description: "The subfolder under 'addons' that the plugin should be placed."
    required: true
  target-branch:
    description: "The name of the branch to push the packaged addon to."
    required: true
  extra-project-settings:
    description: "Extra newline-separated settings to add to the 'project.godot' file."
    required: false

runs:
  using: "composite"
  steps:
    # Reimport assets so '*.import' files are updated.
    - name: Reimport assets
      shell: bash
      run: |
        if [[ ! -f "project.godot" ]]; then
          CREATED_PROJECT_MANIFEST=1
          touch project.godot
        fi

        if [[ ! -z "${{ inputs.extra-project-settings }}" ]]; then
          echo "${{ inputs.extra-project-settings }}" >> project.godot
        fi

        # NOTE: It's okay if this fails, probably. For example, coffeebeats/gut
        # at '24f97b756fcc6a82375ef24b44c84bb1ee781786' fails with Godot
        # 'v4.3-stable', but after the relevant imports occur.
        godot --editor --headless --import --quit || :

        if [[ $CREATED_PROJECT_MANIFEST -eq 1 ]]; then
          rm project.godot
        elif [[ ! -z "${{ inputs.extra-project-settings }}" && -f "project.godot" ]]; then
          git restore project.godot
        fi

    - name: Construct addon directory
      id: addon
      shell: bash
      run: |
        mkdir ${{ runner.temp }}/addon

        # Set options to enable more extensive globbing.
        shopt -s extglob
        shopt -s globstar

        if [[ ! -d "addons/${{ inputs.subfolder }}" ]]; then
          echo "Addon not found under 'addons/'; assuming addon is root-level."
          cp -r * ${{ runner.temp }}/addon
        else
          echo "Addon found under 'addons/'; moving addon files."

          # Move nested files into the repository root.
          cp +(LICENSE|license)* ${{ runner.temp }}/addon 2>/dev/null || :
          cp +(README|readme)* ${{ runner.temp }}/addon 2>/dev/null || :
          cp -r addons/${{ inputs.subfolder }}/* ${{ runner.temp }}/addon 2>/dev/null || :
        fi

    - name: Prune addon source
      working-directory: ${{ runner.temp }}/addon
      shell: bash
      run: |
        # Set options to enable more extensive globbing.
        shopt -s extglob
        shopt -s globstar

        # Remove development/project-related files.
        rm -f project.godot
        rm -f icon.*
        rm -rf script_templates

        # Remove all nested addon dependencies.
        rm -rf addons

        # Remove testing-related files.
        rm -f **/*_test.gd

    - name: Add a '.gitignore' file
      working-directory: ${{ runner.temp }}/addon
      shell: bash
      run: |
        if [[ ! -f ".gitignore" ]]; then
            touch ".gitignore"
        else
          echo "" >> ".gitignore"
        fi

        cat <<EOM >> ".gitignore"
        # DO NOT EDIT: The below entries were generated by 'coffeebeats/godot-infra/package-addon':

        # MacOS-specific ignores
        .DS_Store

        # Windows-specific ignores
        ~*
        *.TMP
        EOM

    - name: Inspect packaged addon
      working-directory: ${{ runner.temp }}/addon
      shell: bash
      run: "ls -lsa"

      # Reset the working tree since we don't need to keep edits.
    - name: Restore worktree
      shell: bash
      run: "git restore ."

    - name: Push the latest changes to the target branch
      shell: bash
      run: |
        # Check out to target branch
        BRANCHES=$(git ls-remote --heads origin ${{ inputs.target-branch }})

        if [[ -z "$BRANCHES" ]]; then
          git checkout -b ${{ inputs.target-branch }}
        else
          git fetch origin +refs/heads/${{ inputs.target-branch }}:refs/heads/${{ inputs.target-branch }}
          git checkout ${{ inputs.target-branch }}
        fi

        # Set options to enable more extensive globbing.
        shopt -s extglob
        shopt -s globstar

        rm -rf * .@(!(.||git))

        echo "Target addon workspace (before):"
        ls -lsa .

        cp -r ${{ runner.temp }}/addon/* ${{ runner.temp }}/addon/.gitignore .

        echo "Target addon workspace (after):"
        ls -lsa .

    - uses: coffeebeats/godot-infra/commit-changes@main
      with:
        description: "updating `${{ inputs.subfolder }}` to `${{ steps.update.outputs.rev }}`"
        target-branch: ${{ inputs.target-branch }}
