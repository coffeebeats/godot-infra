name: "📁 godot-infra: Create 'MoltenVK' SDK archive"

inputs:
  version:
    description: "The 'MoltenVK' version to archive."
    required: true
  xcode-version:
    description: "The 'Xcode' version to use for building/extracting."
    required:
  osx-version-min:
    description: "The minimum supported 'macOS' version."
    required: true
  out:
    description: "The filename to write the archive to."
    required: false
    default: moltenvk.tar.gz

outputs:
  name:
    description: "The name of the 'MoltenVK' SDK artifact."
    value: ${{ steps.archive.outputs.name }}
  path:
    description: "The path to the 'MoltenVK' SDK artifact."
    value: ${{ steps.archive.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: Verify runner OS
      shell: bash
      run: '[[ "${{ runner.os }}" != "macOS" ]] && exit 1 || :'

    - name: Determine output filename
      id: archive
      shell: bash
      run: |
        OUT="${{ inputs.out }}"
        if [[ "$OUT" != *".tar.gz" ]]; then
          echo "Invalid compression; only 'gz' is supported!"
          exit 1
        fi

        echo "name=$(basename $OUT)" >> "$GITHUB_OUTPUT"
        echo "path=$OUT" >> "$GITHUB_OUTPUT"

    - name: Mount cache for archive
      id: cache-archive
      uses: actions/cache@v4
      with:
        key: moltenvk-${{ inputs.version }}-osx-min-${{ inputs.osx-version-min }}-xcode-${{ inputs.xcode-version }}
        path: ${{ steps.archive.outputs.path }}

    - name: Switch 'Xcode' versions
      if: steps.cache-archive.outputs.cache-hit != 'true' && inputs.xcode-version != ''
      shell: bash
      run: |
        sudo xcode-select -s /Applications/Xcode_${{ inputs.xcode-version }}.app
        xcodebuild -version

    - uses: actions/checkout@v4
      if: steps.cache-archive.outputs.cache-hit != 'true'
      with:
        repository: "KhronosGroup/MoltenVK"
        ref: "v${{ inputs.version }}"
        path: "MoltenVK"

    # See https://github.com/KhronosGroup/MoltenVK#building-moltenvk
    - name: Package SDK
      if: steps.cache-archive.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd MoltenVK

        ./fetchDependencies --macos

        # FIXME: https://github.com/godotengine/godot/issues/68512
        MACOSX_DEPLOYMENT_TARGET=${{ inputs.osx-version-min }} \
        OTHER_CFLAGS='-fno-objc-msgsend-selector-stubs' \
        make || :  # here, 'make' always returns non-zero exit code

        make macos

        cd ..

        # Extract the only required library; see
        # https://github.com/godotengine/godot/blob/4.2/platform/macos/detect.py#L77-L88.

        OUT_DIR=dist/macOS/lib/MoltenVK.xcframework/macos-arm64_x86_64

        mkdir -p "$OUT_DIR"

        mv MoltenVK/MoltenVK/MoltenVK.xcframework/macos-arm64_x86_64/* "$OUT_DIR"

        find dist \
          -type f \
          -o -type l \
          -o -type d | \
          tail -n +2 | \
          sed s,^dist/,, | \
          tar \
            -czf ${{ steps.archive.outputs.path }} \
            --no-recursion \
            -C dist \
            -T -
