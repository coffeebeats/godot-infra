name: "📁 Archive: MoltenVK SDK"

# NOTE: This action compiles 'MoltenVK' from source using specific compilation
# flags that restore compatibility with 'osxcross'.

inputs:
  version:
    description: "The 'MoltenVK' version to archive."
    required: true
  xcode-version:
    description: "The 'Xcode' version to use for building/extracting."
    required:
  osx-version-min:
    description: "The minimum supported 'macOS' version."
    required: true
  out:
    description: "The filename to write the archive to."
    required: false
    default: moltenvk.tar.gz

outputs:
  name:
    description: "The name of the 'MoltenVK' SDK artifact."
    value: ${{ steps.archive.outputs.name }}
  path:
    description: "The path to the 'MoltenVK' SDK artifact."
    value: ${{ steps.archive.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: Verify runner OS
      shell: bash
      run: '[[ "${{ runner.os }}" != "macOS" ]] && exit 1 || :'

    - name: Determine output filename
      id: archive
      shell: bash
      run: |
        OUT="${{ inputs.out }}"
        if [[ "$OUT" != *".tar.gz" ]]; then
          echo "Invalid compression; only 'gz' is supported!"
          exit 1
        fi

        echo "name=$(basename $OUT)" >> "$GITHUB_OUTPUT"
        echo "path=$OUT" >> "$GITHUB_OUTPUT"

    - name: Switch 'Xcode' versions
      if: inputs.xcode-version != ''
      shell: bash
      run: |
        sudo xcode-select -s /Applications/Xcode_${{ inputs.xcode-version }}.app
        xcodebuild -version

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        repository: "KhronosGroup/MoltenVK"
        ref: "v${{ inputs.version }}"
        path: "MoltenVK"

    - name: Install 'tree' for inspection
      shell: bash
      run: "brew install tree"

    # See https://github.com/KhronosGroup/MoltenVK#building-moltenvk
    - name: Package SDK
      shell: bash
      run: |
        cd MoltenVK

        ./fetchDependencies --macos

        # FIXME: https://github.com/godotengine/godot/issues/68512
        MACOSX_DEPLOYMENT_TARGET=${{ inputs.osx-version-min }} \
        OTHER_CFLAGS='-fno-objc-msgsend-selector-stubs' \
        make macos

        echo "Inspecting compiled artifacts ('Package/Release/'):"
        tree Package/Release/

        # Extract the only required library; see
        # https://github.com/godotengine/godot/blob/4.4/platform_methods.py#L139-L162.

        OUT_DIR=dist/macOS/lib/MoltenVK.xcframework/macos-arm64_x86_64

        mkdir -p "$OUT_DIR"

        mv \
          Package/Release/MoltenVK/static/MoltenVK.xcframework/macos-arm64_x86_64/* \
          "$OUT_DIR"

        echo "Inspecting upload artifact, pre-archive ('dist/'):"
        tree dist/

        find dist \
          -type f \
          -o -type l \
          -o -type d | \
          tail -n +2 | \
          sed s,^dist/,, | \
          tar \
            -czf ${{ steps.archive.outputs.path }} \
            --no-recursion \
            -C dist \
            -T -

        echo "Inspecting upload artifact, post-archive ('dist/'):"
        ls dist/
