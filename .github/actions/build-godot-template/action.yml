name: "🏗️ godot-infra: Build 'godot' export template"
description: "Compiles a 'godot' export template."

inputs:
  platform:
    description: "The 'godot' platform to build for."
    required: true
  profile:
    description: "The execution profile to build with."
    required: false
    default: release
  features:
    description: "A space-, comma- or new line-separated list of features to enable."
    required: false
    default: ""
  out-dir:
    description: "The directory in which to place the export templates."
    required: false
    default: "dist"
  project-dir:
    description: "The path to the game project directory."
    required: false
    default: "."
  manifest-path:
    description: "A specific 'gdbuild' manifest filename (relative to 'project-dir')."
    required: false

outputs:
  path:
    description: "The directory containing the export template artifacts."
    value: ${{ steps.config.outputs.runner-dist }}

runs:
  using: "composite"
  steps:
    - name: Export the output directory
      id: config
      shell: bash
      run: |
        # Runner paths
        echo "runner-dist=$(realpath ${{ inputs.out-dir }})" >> "$GITHUB_OUTPUT"
        echo "runner-scons=$HOME/.scons" >> "$GITHUB_OUTPUT"

        # Container paths
        echo "container-workspace=/home/ubuntu/godot-infra" >> "$GITHUB_OUTPUT"

        FEATURES=()
        for f in "$(printf "${{ inputs.features }}" | tr -s ', ' \\n)"; do
          FEATURES+=("--feature $f")
        done

        TEMPLATE_HASH="$( \
          gdbuild template \
            --project ${{ inputs.project-dir }} \
            $([[ '${{ inputs.profile }}' == 'release' ]] && echo '--release') \
            $([[ '${{ inputs.profile }}' == 'release_debug' ]] && echo '--release_debug') \
            $([[ '${{ inputs.profile }}' == 'debug' ]] && echo '--debug') \
            $([[ '${{ inputs.manifest-path }}' != '' ]] && echo "--config ${{ inputs.project-dir }}/${{ inputs.manifest-path }}") \
            $([[ '${FEATURES[@]}' != '' ]] && echo "${FEATURES[@]}" | xargs) \
            --print-hash \
            ${{ inputs.platform }} \
        )"

        # 'gdbuild' properties
        echo template-features="${FEATURES[@]}" >> "$GITHUB_OUTPUT"
        echo "template-hash=$TEMPLATE_HASH" >> "$GITHUB_OUTPUT"

    - name: Cache the 'godot' export template
      id: cache-template
      uses: actions/cache@v4
      with:
        path: ${{ steps.config.outputs.runner-dist }}
        key: template-${{ runner.os }}-${{ steps.config.outputs.template-hash }}

    - name: Cache the 'SCons' build directory
      if: steps.cache-template.outputs.cache-hit != 'true'
      id: cache-scons
      uses: actions/cache@v4
      with:
        path: ${{ steps.config.outputs.runner-scons }}
        key: scons-${{ runner.os }}-${{ inputs.platform }}-${{ inputs.profile }}-${{ hashFiles(format('{0}/.godot-version', inputs.project-dir)) }}-${{ hashFiles(format('{0}/*.toml', inputs.project-dir)) }}-${{ steps.config.outputs.template-hash }}
        restore-keys: |
          scons-${{ runner.os }}-${{ inputs.platform }}-${{ inputs.profile }}-${{ hashFiles(format('{0}/.godot-version', inputs.project-dir)) }}-${{ hashFiles(format('{0}/*.toml', inputs.project-dir)) }}-
          scons-${{ runner.os }}-${{ inputs.platform }}-

    - name: Set up 'podman'
      if: steps.cache-template.outputs.cache-hit != 'true'
      uses: ./.github/actions/setup-podman
      with:
        login: true

    - name: Compile 'godot' export template
      if: steps.cache-template.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ${{ steps.config.outputs.runner-dist }}
        mkdir -p ${{ steps.config.outputs.runner-scons }}

        WORKSPACE_DIR="${{ steps.config.outputs.container-workspace }}"

        podman run \
          --userns keep-id:uid=1000,gid=1000 \
          -v ${{ steps.config.outputs.runner-dist }}:$WORKSPACE_DIR/dist:Z \
          -v ${{ steps.config.outputs.runner-scons }}:$WORKSPACE_DIR/.scons:Z \
          -v $(realpath ${{ inputs.project-dir }}):$WORKSPACE_DIR/project:ro,Z \
          $([[ -d "$GDENV_HOME" ]] && echo "-v $(realpath $GDENV_HOME):$WORKSPACE_DIR/.gdenv:Z") \
          $([[ -d "$GDBUILD_HOME" ]] && echo "-v $(realpath $GDBUILD_HOME):$WORKSPACE_DIR/.gdbuild:Z") \
          -e SCONS_CACHE=$WORKSPACE_DIR/.scons \
          ghcr.io/${{ github.repository_owner }}/godot-infra:latest bash -c \
          "gdbuild template \
          --verbose \
          $([[ "${{ steps.config.outputs.template-features }}" != '' ]] && echo "${{ steps.config.outputs.template-features }}" | xargs) \
          $([[ '${{ inputs.profile }}' == 'release' ]] && echo '--release') \
          $([[ '${{ inputs.profile }}' == 'release_debug' ]] && echo '--release_debug') \
          $([[ '${{ inputs.profile }}' == 'debug' ]] && echo '--debug') \
          $([[ '${{ inputs.manifest-path }}' != '' ]] && echo "--config $WORKSPACE_DIR/project/${{ inputs.manifest-path }}") \
          --out $WORKSPACE_DIR/dist \
          ${{ inputs.platform }}"

    - name: Print 'godot' export template info
      shell: bash
      run: ls -ls ${{ steps.config.outputs.runner-dist }}
