name: "🏗️ godot-infra: Build 'godot' export template"
description: "Compiles a 'godot' export template."

inputs:
  platform:
    description: "The 'godot' platform to build for."
    required: true
  profile:
    description: "The execution profile to build with."
    required: false
    default: release
  features:
    description: "A space-, comma- or new line-separated list of features to enable."
    required: false
    default: ""
  out-dir:
    description: "The directory in which to place the export templates."
    required: false
    default: "dist"
  project-dir:
    description: "The path to the game project directory."
    required: false
    default: "."
  manifest-path:
    description: "A specific 'gdbuild' manifest filename (relative to 'project-dir')."
    required: false

outputs:
  path:
    description: "The directory containing the export template artifacts."
    value: ${{ steps.config.outputs.runner-dist }}

runs:
  using: "composite"
  steps:
    - name: Configure action properties
      id: config
      shell: bash
      run: |
        # Runner paths
        echo "runner-project=$(realpath ${{ inputs.project-dir }})"  >> "$GITHUB_OUTPUT"
        echo "runner-dist=$(realpath ${{ inputs.out-dir }})" >> "$GITHUB_OUTPUT"
        echo "runner-scons=$HOME/.scons" >> "$GITHUB_OUTPUT"

        # Container paths
        echo "container-workspace=/home/ubuntu/godot-infra" >> "$GITHUB_OUTPUT"

    - name: Build template commands
      id: command
      uses: coffeebeats/gdbuild/.github/actions/run-template@refactor/ci-improve-action
      with:
        execute: false
        verbose: true
        platform: ${{ inputs.platform }}
        profile: ${{ inputs.profile }}
        features: ${{ inputs.features }}
        out-dir: ${{ steps.config.outputs.container-workspace }}/dist
        project-dir: ${{ steps.config.outputs.container-workspace }}/project
        manifest-path: ${{ inputs.manifest-path }}

    - name: Set up 'podman'
      uses: ./.github/actions/setup-podman
      with:
        login: true

    - name: Create a secret for the encryption key
      if: env.SCRIPT_AES256_ENCRYPTION_KEY != ''
      shell: bash
      run: podman secret create --env=true encryption-key SCRIPT_AES256_ENCRYPTION_KEY

    - name: Run the hash print command
      id: template-hash
      shell: bash
      run: |
        mkdir -p ${{ steps.config.outputs.runner-dist }}

        podman run \
          --userns keep-id:uid=1000,gid=1000 \
          -v ${{ steps.config.outputs.runner-project }}:${{ steps.config.outputs.container-workspace }}/project:ro,Z \
          -v ${{ steps.config.outputs.runner-dist }}:${{ steps.config.outputs.container-workspace }}/dist:ro,Z \
          --secret encryption-key,type=env,target=SCRIPT_AES256_ENCRYPTION_KEY \
          ghcr.io/${{ github.repository_owner }}/godot-infra:latest bash -c \
          "${{ steps.command.outputs.print-hash }} > ${{ steps.config.outputs.container-workspace }}/dist/hash"

        echo "value=$(cat ${{ steps.config.outputs.runner-dist }}/hash)" >> "$GITHUB_OUTPUT"
        rm  ${{ steps.config.outputs.runner-dist }}/hash

    - name: Cache the 'gdbuild' store's template artifact directory
      id: store
      uses: actions/cache@v4
      with:
        path: ${{ env.GDBUILD_HOME }}/templates
        key: templates-${{ runner.os }}-${{ steps.template-hash.outputs.value }}

    - name: Configure runner
      if: steps.store.outputs.cache-hit != 'true'
      uses: ./.github/actions/setup-runner

    - name: Cache the 'SCons' build directory
      if: steps.store.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: ${{ steps.config.outputs.runner-scons }}
        key: scons-${{ runner.os }}-${{ inputs.platform }}-${{ inputs.profile }}-${{ steps.template-hash.outputs.value }}
        restore-keys: |
          scons-${{ runner.os }}-${{ inputs.platform }}-${{ inputs.profile }}-
          scons-${{ runner.os }}-${{ inputs.platform }}-

    - name: Compile 'godot' export template
      shell: bash
      run: |
        mkdir -p ${{ steps.config.outputs.runner-scons }}

        WORKSPACE_DIR="${{ steps.config.outputs.container-workspace }}"

        podman run \
          --userns keep-id:uid=1000,gid=1000 \
          -v ${{ steps.config.outputs.runner-dist }}:$WORKSPACE_DIR/dist:Z \
          -v ${{ steps.config.outputs.runner-scons }}:$WORKSPACE_DIR/.scons:Z \
          -v ${{ steps.config.outputs.runner-project }}:$WORKSPACE_DIR/project:ro,Z \
          $([[ -d "$GDENV_HOME" ]] && echo "-v $(realpath $GDENV_HOME):$WORKSPACE_DIR/.gdenv:Z") \
          $([[ -d "$GDBUILD_HOME" ]] && echo "-v $(realpath $GDBUILD_HOME):$WORKSPACE_DIR/.gdbuild:Z") \
          -e SCONS_CACHE=$WORKSPACE_DIR/.scons \
          --secret encryption-key,type=env,target=SCRIPT_AES256_ENCRYPTION_KEY \
          ghcr.io/${{ github.repository_owner }}/godot-infra:latest bash -c \
          "${{ steps.command.outputs.run }}"

    - name: Print 'godot' export template info
      shell: bash
      run: ls -ls ${{ steps.config.outputs.runner-dist }}
