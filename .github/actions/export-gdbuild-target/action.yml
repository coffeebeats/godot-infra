name: "ðŸ¤– godot-infra: Export 'gdbuild' target"
description: "Exports a 'gdbuild' target."

inputs:
  target:
    description: "The name of the 'gdbuild' target to export."
    required: true
  platform:
    description: "The 'godot' platform to build for."
    required: true
  profile:
    description: "The execution profile to build with."
    required: false
    default: release
  features:
    description: "A space-, comma- or new line-separated list of features to enable."
    required: false
    default: ""
  out-dir:
    description: "The directory in which to place the exported artifacts."
    required: false
    default: "dist"
  project-dir:
    description: "The path to the game project directory."
    required: false
    default: "."
  manifest-path:
    description: "A specific 'gdbuild' manifest filename (relative to 'project-dir')."
    required: false

outputs:
  path:
    description: "The directory containing the exported artifacts."
    value: ${{ steps.config.outputs.runner-dist }}

runs:
  using: "composite"
  steps:
    - name: Set up action configuration
      id: config
      shell: bash
      run: |
        # Runner paths
        echo "runner-dist=$(realpath ${{ inputs.out-dir }})" >> "$GITHUB_OUTPUT"

        # Container paths
        echo "container-workspace=/home/ubuntu/godot-infra" >> "$GITHUB_OUTPUT"

        CMD=(gdbuild target)

        CMD+=(--project ${{ inputs.project-dir }})
        CMD+=(--platform ${{ inputs.platform }})

        for f in "$(printf "${{ inputs.features }}" | tr -s ', ' \\n)"; do
          CMD+=(--feature $f)
        done

        case ${{ inputs.profile }} in
          'release')
            CMD+=(--release)
          'release_debug')
            CMD+=(--release_debug)
        esac

        if [[ '${{ inputs.manifest-path }}' != '' ]]; then
          CMD+=(--config ${{ inputs.project-dir }}/${{ inputs.manifest-path }})
        fi

        CMD+=(--print-hash ${{ inputs.target }})

        TARGET_HASH="$($CMD[@])"

        # 'gdbuild' properties
        echo "target-hash=$TARGET_HASH" >> "$GITHUB_OUTPUT"

    - name: Cache the exported target artifacts
      id: cache-target
      uses: actions/cache@v4
      with:
        path: ${{ steps.config.outputs.runner-dist }}
        key: target-${{ runner.os }}-${{ steps.config.outputs.target-hash }}

    - name: Export the target
      if: steps.cache-target.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ${{ steps.config.outputs.runner-dist }}

        CMD=(gdbuild target --verbose)

        CMD+=(--out ${{ steps.config.outputs.runner-dist }})
        CMD+=(--platform ${{ inputs.platform }})
        CMD+=(--project ${{ inputs.project-dir }})

        for f in "$(printf "${{ inputs.features }}" | tr -s ', ' \\n)"; do
          CMD+=(--feature $f)
        done

        case ${{ inputs.profile }} in
          'release')
            CMD+=(--release)
          'release_debug')
            CMD+=(--release_debug)
        esac

        if [[ '${{ inputs.manifest-path }}' != '' ]]; then
          CMD+=(--config ${{ inputs.project-dir }}/${{ inputs.manifest-path }})
        fi

        CMD+=(${{ inputs.target }})

        "CMD[@]"

    - name: Print exported target artifacts info
      shell: bash
      run: ls -ls ${{ steps.config.outputs.runner-dist }}
