name: "üêô Check: Check and fix source code formatting"
description: "Check project formatting, and if it fails, fix it."

inputs:
  check-command:
    description: "The command that checks if formatting is correct."
    required: true
  fix-command:
    description: "The command that fixes formatting if incorrect."
    required: true
  continue-on-error:
    description: "Whether to fix formatting if it's incorrect (instead of failing)."
    required: false
    default: false

runs:
  using: "composite"
  steps:
    # Check source code
    - name: Check formatting
      id: check-formatting
      shell: bash
      run: |-
        # Set options to enable more extensive globbing.
        shopt -s extglob
        shopt -s globstar

        ${{ inputs.check-command }}

    - uses: actions/checkout@v4
      if: steps.check-formatting.outcome == 'failure'
      with:
        # Checkout the "head_ref" (i.e. PR branch HEAD) in case a commit is
        # later needed. See https://github.com/stefanzweifel/git-auto-commit-action
        # for more details.
        ref: ${{ github.head_ref }}

    # Fix source code
    - name: Fix formatting
      if: steps.check-formatting.outcome == 'failure'
      shell: bash
      run: |-
        # Set options to enable more extensive globbing.
        shopt -s extglob
        shopt -s globstar

        ${{ inputs.fix-command }}

    - uses: coffeebeats/godot-infra/commit-changes@main
      if: steps.check-formatting.outcome == 'failure'
      with:
        description: "fix formatting"

    - name: Fail workflow
      if: |
        inputs.continue-on-error != 'true' &&
        steps.check-formatting.outcome == 'failure'
      shell: bash
      run: exit 1
