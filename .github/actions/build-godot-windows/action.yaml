name: "🏗️ godot-infra: Build Windows export template"
description: "Compiles a 'godot' export template for Windows."

inputs:
  platform:
    description: "The 'godot' platform to build for."
    required: true
  profile:
    description: "The execution profile to build with."
    required: false
    default: release
  icon-path:
    description: "A path to an '.ico' file to set as the file icon."
    required: false
  custompy-path:
    description: "A path to a 'custom.py' file containing build options."
    required: false
  out-dir:
    description: "The directory in which to place the export templates."
    required: false
    default: "dist"

outputs:
  path:
    description: "The directory containing the export template artifacts."
    value: ${{ steps.config.outputs.runner-dist }}

runs:
  using: "composite"
  steps:
    - name: Configure action properties
      id: config
      shell: bash
      run: |
        # Runner paths
        echo "runner-project=$(realpath ${{ inputs.project-dir }})"  >> "$GITHUB_OUTPUT"
        echo "runner-dist=$(realpath ${{ inputs.out-dir }})" >> "$GITHUB_OUTPUT"
        echo "runner-scons=$HOME/.scons" >> "$GITHUB_OUTPUT"

        # Container paths
        echo "container-workspace=/home/ubuntu/godot-infra" >> "$GITHUB_OUTPUT"

        # Create required directories
        mkdir -p $HOME/.scons
        mkdir -p $(realpath ${{ inputs.out-dir }})

    - name: Set up 'podman'
      uses: ./.github/actions/setup-podman
      with:
        login: true

    - name: Create a secret for the encryption key
      if: env.SCRIPT_AES256_ENCRYPTION_KEY != ''
      shell: bash
      run: podman secret create --env=true encryption-key SCRIPT_AES256_ENCRYPTION_KEY

    - name: Cache the 'gdbuild' store's template artifact directory
      id: export-template
      uses: actions/cache@v4
      with:
        path: ${{ steps.config.outputs.runner-dist }}/templates
        key: templates-${{ runner.os }}-${{ inputs.platform }}-${{ inputs.profile }}-${{ hashFiles(inputs.icon-path,inputs.custompy-path) }}

    - name: Configure runner
      if: steps.export-template.outputs.cache-hit != 'true'
      uses: ./.github/actions/setup-runner

    - name: Cache the 'SCons' build directory
      if: steps.export-template.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: ${{ steps.config.outputs.runner-scons }}
        key: scons-${{ runner.os }}-${{ inputs.platform }}-${{ inputs.profile }}
        restore-keys: |
          scons-${{ runner.os }}-${{ inputs.platform }}-

    - name: Compile 'godot' export template
      if: steps.export-template.outputs.cache-hit != 'true'
      shell: bash
      run: >
        podman run
          --userns keep-id:uid=1000,gid=1000
          -v ${{ steps.config.outputs.runner-dist }}:$${{ steps.config.outputs.container-workspace }}/dist:Z
          -v ${{ steps.config.outputs.runner-scons }}:$${{ steps.config.outputs.container-workspace }}/.scons:Z
          -v ${{ steps.config.outputs.runner-project }}:$${{ steps.config.outputs.container-workspace }}/project:ro,Z
          $([[ -d "$GDENV_HOME" ]] && echo "-v $(realpath $GDENV_HOME):$${{ steps.config.outputs.container-workspace }}/.gdenv:Z")
          $([[ -d "$GDBUILD_HOME" ]] && echo "-v $(realpath $GDBUILD_HOME):$${{ steps.config.outputs.container-workspace }}/.gdbuild:Z")
          -e SCONS_CACHE=$WORKSPACE_DIR/.scons
          --secret encryption-key,type=env,target=SCRIPT_AES256_ENCRYPTION_KEY
          ghcr.io/${{ github.repository_owner }}/godot-infra:latest gdbuild
          python3 -m SCons
          "-j$(nproc)"

    - name: Print 'godot' export template info
      shell: bash
      run: ls -ls ${{ steps.config.outputs.runner-dist }}
