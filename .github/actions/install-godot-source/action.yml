name: "ðŸ¤– Install: Download Godot source code"
description: "Downloads the Godot source code and vendors it to a directory and/or artifact."

inputs:
  godot-src-rev:
    type: string
    description: "The revision/tag name in the 'godot-src-repository' to check out."
    required: true
  godot-src-repository:
    type: string
    description: "The name of a GitHub repository containing the Godot source code."
    required: false
    default: godotengine/godot
  godot-patches:
    description: "A comma or newline-delimited list of glob patterns to patch files."
    required: false

  dst-path:
    type: string
    description: "A destination path to vendor the Godot source code into (skipped if empty)."
    required: false
    default: ""
  artifact-name:
    type: string
    description: "An artifact name to upload the source code under (skipped if empty)."
    required: false
    default: ""

outputs:
  major-version:
    description: "The major version of the source code."
    value: ${{ steps.godot.outputs.major }}
  minor-version:
    description: "The minor version of the source code."
    value: ${{ steps.godot.outputs.minor }}
  patch-version:
    description: "The patch version of the source code."
    value: ${{ steps.godot.outputs.patch }}
  status-version:
    description: "The status label of the source code."
    value: ${{ steps.godot.outputs.status }}
  major-minor-version:
    description: "The major-minor version of the source code."
    value: ${{ steps.godot.outputs.major-minor }}
  semantic-version:
    description: "The full semantic version of the source code."
    value: ${{ steps.godot.outputs.semantic }}

runs:
  using: "composite"
  steps:
    - name: Clone the Godot source code
      id: clone
      shell: bash
      run: >-
        PATH_REPO="${{ github.workspace }}/godot-${{ inputs.godot-src-rev }}"

        echo "directory=$PATH_REPO" >> "$GITHUB_OUTPUT"

        GH_TOKEN=${{ github.token }}
        gh repo clone
        ${{ inputs.godot-src-repository }}
        "$PATH_REPO"
        --
        -b ${{ inputs.godot-src-rev }}
        --depth 1
        --no-tags

        rm -rf "$PATH_REPO/.git"

    - name: Patch the Godot source code
      if: inputs.godot-patches != ''
      shell: bash
      run: |-
        set -f

        for pattern in $(
            set -f
            echo "${{ inputs.godot-patches }}" | tr ',' '\n' | sed -E 's/\\n/ /'
        ); do
            if [[ "$(
                set +f
                realpath -m "${pattern/\~/$HOME}"
            )" != "$PWD"* ]]; then
                echo "Refusing to use insecure pattern: $pattern"
                exit 1
            fi

            echo "Applying patches that match pattern: $pattern"
            (
                set +f

                for file in $pattern; do
                  if [[ "$file" != *".patch" && "$file" != *".diff" ]]; then
                    echo "Skipping unrecognized patch file: $file"
                    continue
                  fi

                  echo "Applying patch: $file"

                  file=$(realpath --relative-to ${{ steps.clone.outputs.directory }} $file)

                  git apply \
                    -v \
                    --ignore-whitespace \
                    --directory=${{ steps.clone.outputs.directory }} \
                    "$file"
                done
            )
        done

        set +f

    - name: Determine the Godot version
      id: godot
      uses: coffeebeats/godot-infra/.github/actions/parse-godot-version@v2
      with:
        fail-on-requirements-not-met: false
        versionpy-path: ${{ github.workspace }}/godot-${{ inputs.godot-src-rev }}/version.py

    - name: Verify source code checkout
      shell: bash
      run: "[[ ! -f '${{ github.workspace }}/godot-${{ inputs.godot-src-rev }}/version.py' ]] && exit 1 || :"

    - name: Upload the source code artifact
      if: inputs.artifact-name != ''
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ github.workspace }}/godot-${{ inputs.godot-src-rev }}
        if-no-files-found: error

    - name: Copy the source code to 'dst-path'
      if: inputs.dst-path != ''
      shell: bash
      run: |
        if [[ "$(realpath ${{ inputs.dst-path }})" == "$(realpath ${{ github.workspace }}/godot-${{ inputs.godot-src-rev }})" ]]; then
          echo "Godot source code already at target directory; exiting without making changes."
          exit 0
        fi

        mv ${{ github.workspace }}/godot-${{ inputs.godot-src-rev }} ${{ inputs.dst-path }}
        echo "Moved Godot source code to target directory: $(realpath ${{ inputs.dst-path }})"
