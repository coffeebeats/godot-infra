name: "ðŸ”„ Publish: Godot addon update"

on:
  workflow_dispatch:
    inputs:
      name:
        type: string
        description: "The 'thirdparty/' directory name of the addon to update."
        required: true
      commit:
        type: string
        description: "The source repository Git commit to publish."
        required: false
        default: HEAD
      target-branch:
        type: string
        description: "The name of the branch to push changes to."
        required: true
        default: godot-v4.3
      subfolder:
        type: string
        description: "The 'addons/' directory name of the addon to update."
        required: false
      force:
        type: boolean
        description: "Create the target branch even if the addon is up-to-date."
        required: false
        default: true
      os:
        type: string
        description: "The runner's operating system."
        required: false
        default: ubuntu-latest
      timeout:
        type: number
        description: "The workflow's maximum allowed run duration (in minutes)."
        required: false
        default: 5

defaults:
  run:
    shell: bash

jobs:
  update-dependency:
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ fromJson(inputs.timeout) }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GODOT_INFRA_UPDATE_TOKEN }}

      - name: Validate 'name' input
        run: |
          if [[ ! -d thirdparty/${{ inputs.name }} ]]; then
            echo "No managed addon found with name: ${{ inputs.name }}"
            exit 1
          fi

      - name: Update dependency
        id: update
        working-directory: thirdparty/${{ inputs.name }}
        run: |
          CHANGES=$(git submodule update --remote)
          if [[ -z "$CHANGES" ]]; then
            echo "current=true" >> $GITHUB_OUTPUT

            if [[ "${{ fromJson(inputs.force) }}" != 'true' ]]; then
              echo "Dependency is up-to-date; exiting without making changes."
            fi
          fi

          echo "rev=$(git rev-parse --short ${{ inputs.commit }})" >> $GITHUB_OUTPUT

      - uses: coffeebeats/godot-infra/.github/actions/setup-godot@v0
        with:
          version: v4.3-stable

      - name: Construct addon directory
        id: addon
        if: steps.update.outputs.current != 'true' || inputs.force == true
        run: |
          NAME="${{ inputs.name }}"
          if [[ ! -z "${{ inputs.subfolder }}" ]]; then
            NAME="${{ inputs.subfolder }}"
          fi

          mkdir ${{ runner.temp }}/addon

          cd thirdparty/${{ inputs.name }}

          # Reimport assets so *.import files are updated.
          if [[ -f "project.godot" ]]; then
            godot --editor --headless --import --quit
          fi

          if [[ ! -d "addons/$NAME" ]]; then
            echo "Addon not found under 'addons/'; assuming addon is root-level."
            cp -r * ${{ runner.temp }}/addon
          else
            echo "Addon found under 'addons/'; moving addon files."

            # Move nested files into the repository root.
            cp LICENSE* ${{ runner.temp }}/addon 2>/dev/null || :
            cp README* ${{ runner.temp }}/addon 2>/dev/null || :
            cp -r addons/$NAME/* ${{ runner.temp }}/addon 2>/dev/null || :
          fi

          echo "Updating .gitignore for addon."

          PATH_GIT_IGNORE="${{ runner.temp }}/addon/.gitignore"
          if [[ ! -f "$PATH_GIT_IGNORE" ]]; then
              touch "$PATH_GIT_IGNORE"
          fi

          echo "" >> "$PATH_GIT_IGNORE"
          echo "# DO NOT EDIT: The below entries were generated by coffeebeats/godot-infra:" >> "$PATH_GIT_IGNORE"

          # Hide '.TMP' files, which are noisy on Windows hosts.
          echo "*.tmp" >> "$PATH_GIT_IGNORE"
          echo "*.TMP" >> "$PATH_GIT_IGNORE"

          echo "Addon files to publish:"
          ls -lsa ${{ runner.temp }}/addon

      - name: Push the latest changes to the target branch
        if: steps.update.outputs.current != 'true' || inputs.force == true
        working-directory: thirdparty/${{ inputs.name }}
        run: |
          # Check out to target branch
          BRANCHES=$(git ls-remote --heads origin ${{ inputs.target-branch }})

          if [[ -z "$BRANCHES" ]]; then
            git checkout -b ${{ inputs.target-branch }}
          else
            git fetch origin +refs/heads/${{ inputs.target-branch }}:refs/heads/${{ inputs.target-branch }}
            git checkout ${{ inputs.target-branch }}
          fi

          # Set options to enable more extensive globbing.
          shopt -s extglob
          shopt -s globstar

          rm -rf * .@(!(.||git))

          echo "Target addon workspace (before):"
          ls -lsa .

          cp -r ${{ runner.temp }}/addon/* ${{ runner.temp }}/addon/.gitignore .

          echo "Target addon workspace (after):"
          ls -lsa .

      - uses: coffeebeats/godot-infra/commit-changes@main
        if: steps.update.outputs.current != 'true' || inputs.force == true
        with:
          description: "updating ${{ inputs.name }} to ${{ steps.update.outputs.rev }}"
          target-branch: ${{ inputs.target-branch }}
          working-directory: "thirdparty/${{ inputs.name }}"
