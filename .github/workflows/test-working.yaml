name: "ðŸ§ª godot-infra: Placeholder workflow for testing"

on:
  workflow_dispatch:
    inputs:
      platform:
        type: string
        description: "The platform to build the export template for."
        required: false
        default: windows
      os:
        type: string
        description: "The runner's operating system."
        required: false
        default: ubuntu-latest
      timeout:
        type: number
        description: "The workflow's maximum allowed run duration (in minutes)."
        required: false
        default: 60

jobs:
  todo:
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ fromJson(inputs.timeout) }}

    steps:
      - name: Free additional disk space
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo rm -rf /usr/local/lib/android # Free ~10 GB; removes Android support
          sudo rm -rf /usr/share/dotnet # Free ~20GB; removes .NET support
          sudo rm -rf /usr/local/share/powershell # Free ~1.2GB; removes PowerShell support
          sudo rm -rf /usr/local/share/chromium # Free ~0.5GB; removes Chromium support

          # Free ~1.3GB; removes Java support
          sudo rm -rf $JAVA_HOME_8_X64 $JAVA_HOME_11_X64 $JAVA_HOME_17_X64 $JAVA_HOME_21_X64

      - uses: actions/checkout@v4

      # ------------------------ Install @coffeebeats tools ------------------------ #

      - name: Install 'gdenv'
        uses: coffeebeats/gdenv/.github/actions/setup-gdenv@main
        with:
          # NOTE: The editor and source code must be pre-installed, otherwise 'gdenv'
          # will fail moving the downloaded artifact into the mounted volume.
          project-dir: ./example
          install-src: true

      - name: Install 'gdbuild'
        uses: coffeebeats/gdbuild/.github/actions/setup-gdbuild@main

      # ------------------------ Compile the export template ----------------------- #

      - name: Set up 'podman'
        uses: ./.github/actions/setup-podman
        with:
          install-buildah: true
          install-podman: false
          login: true

      - name: Compile the export template
        uses: ./.github/actions/build-godot-template
        id: build-template
        with:
          platform: windows
          project-dir: ./example

      # ------------------------ Package the export template ----------------------- #

      - name: Configure the artifact name
        id: config-artifact
        shell: bash
        run: echo "name=godot-${{ inputs.platform }}-template.tar.gz" >> $GITHUB_OUTPUT

      - name: Package the export template
        shell: bash
        run: tar \
          -czf ${{ steps.config-artifact.outputs.name }} \
          ${{ steps.build-template.outputs.path }}

      # Publish the artifact
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.config-artifact.outputs.name }}
          path: ${{ steps.config-artifact.outputs.name }}
          retention-days: 7
          if-no-files-found: error
