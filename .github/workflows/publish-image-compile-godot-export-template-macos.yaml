name: "üê≥ Publish: 'compile-godot-export-template' image (MacOS)"

on:
  workflow_call:
    inputs:
      godot-major-minor-version:
        type: string
        description: "The Godot major-minor version supported by the image."
        required: true
      llvm-version:
        type: string
        description: "The 'LLVM' version to install in the image."
        required: false
        default: "17"
      moltenvk-version:
        type: string
        description: "The 'MoltenVK' SDK version to install in the image."
        required: false
        default: "1.2.7"
      osx-version:
        type: string
        description: "The 'MacOS' SDK version to install in the image."
        required: false
        default: "14"
      osx-version-min:
        type: string
        description: "The minimum 'MacOS' SDK version to support."
        required: false
        default: "10.13"
      osxcross-sdk:
        type: string
        description: "The 'darwin*' SDK name for the 'osx-version' specified."
        required: false
        default: "darwin23"
      xcode-version:
        type: string
        description: "The 'Xcode' version to build 'macOS'-related SDKs with."
        required: false
        default: "15.2"
      timeout:
        type: number
        description: "The workflow's maximum allowed run duration (in minutes)."
        required: false
        default: 60
  workflow_dispatch:
    inputs:
      godot-major-minor-version:
        type: string
        description: "The Godot major-minor version supported by the image."
        required: true
      llvm-version:
        type: string
        description: "The 'LLVM' version to install in the image."
        required: true
      moltenvk-version:
        type: string
        description: "The 'MoltenVK' SDK version to install in the image."
        required: true
      osx-version:
        type: string
        description: "The 'MacOS' SDK version to install in the image."
        required: true
      osx-version-min:
        type: string
        description: "The minimum 'MacOS' SDK version to support."
        required: true
      osxcross-sdk:
        type: string
        description: "The 'darwin*' SDK name for the 'osx-version' specified."
        required: true
      xcode-version:
        type: string
        description: "The 'Xcode' version to build 'macOS'-related SDKs with."
        required: true
      timeout:
        type: number
        description: "The workflow's maximum allowed run duration (in minutes)."
        required: false
        default: 60

permissions:
  contents: write
  packages: write

jobs:
  package-macos-sdk:
    uses: "./.github/workflows/package-macos-sdk.yml"
    secrets: "inherit"
    with:
      version: ${{ inputs.osx-version }}
      xcode-version: ${{ inputs.xcode-version }}

  package-moltenvk-sdk:
    uses: "./.github/workflows/package-moltenvk-sdk.yml"
    secrets: "inherit"
    with:
      version: ${{ inputs.moltenvk-version }}
      osx-version-min: ${{ inputs.osx-version-min }}
      xcode-version: ${{ inputs.xcode-version }}

  build-and-publish:
    needs: ["package-macos-sdk", "package-moltenvk-sdk"]

    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJson(inputs.timeout) }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Configure runner
        uses: ./.github/actions/setup-runner

      # --------------------------- Set up build contexts -------------------------- #

      # Extract macOS SDK
      - name: Download 'macOS' SDK artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package-macos-sdk.outputs.name }}
          path: "thirdparty/osxcross/tarballs"

      # Extract MoltenVK SDK
      - name: Download 'MoltenVK' SDK artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package-moltenvk-sdk.outputs.name }}

      - name: Copy 'MoltenVK' SDK into context
        run: tar -C thirdparty/moltenvk -xf ${{ needs.package-moltenvk-sdk.outputs.name }}

      # ------------------------------ Build the image ----------------------------- #

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: compile-godot-export-template/macos
          push: true
          tags: ghcr.io/coffeebeats/compile-godot-export-template:godot-v${{ inputs.godot-major-minor-version }}-macos
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            LLVM_VERSION=${{ inputs.llvm-version }}
            MACOS_VERSION=${{ inputs.osx-version }}
            MACOS_VERSION_MINIMUM=${{ inputs.osx-version-min }}
            OSXCROSS_SDK=${{ inputs.osxcross-sdk }}
          build-contexts: |
            osxcross=thirdparty/osxcross
            vulkan=thirdparty/moltenvk

      - name: Display 'push' outputs
        run: echo "${{ toJSON(steps.build-and-push.outputs.metadata) }}"
