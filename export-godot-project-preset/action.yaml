name: "ðŸ¤– Export: Godot project export preset"
description: "Exports a Godot project export preset for the specified platform."

inputs:
  preset-name:
    description: "The name of the Godot project export preset."
    required: true
  preset-output-name:
    description: "The output filename of the exported Godot project preset."
    required: true

  project-path:
    description: "The path to the Godot project."
    required: false
    default: "."
  godot-editor-version:
    type: string
    description: "The full semantic version of the Godot editor."
    required: true
  export-template-artifact-name:
    description: "The name of the Godot export template artifact to download."
    required: true

  pck-only:
    description: "Whether to export a PCK file instead of an executable."
    required: false
    default: false
  profile:
    description: "The optimization profile of the compiled export template."
    required: false
    default: release
  encryption-key:
    description: "A Godot script encryption key to embed within the export template."
    required: false

  # MacOS-specific inputs.
  codesign-certificate-file:
    description: "The codesigning certificate file (only used on MacOS)."
    required: false
  codesign-certificate-password:
    description: "The codesigning certificate password (only used on MacOS)."
    required: false
  codesign-provisioning-profile:
    description: "The codesigning provisioning profile (only used on MacOS)."
    required: false
  notarization-api-uuid:
    description: "The notarization API UUID (only used on MacOS)."
    required: false
  notarization-api-key:
    description: "The notarization API key (only used on MacOS)."
    required: false
  notarization-api-key-id:
    description: "The notarization API key ID (only used on MacOS)."
    required: false
  notarization-apple-id-name:
    description: "The notarization Apple ID name (only used on MacOS)."
    required: false
  notarization-apple-id-password:
    description: "The notarization Apple ID name (only used on MacOS)."
    required: false

  # Windows-specific inputs.
  codesign-identity-type:
    description: "The codesigning identity type (only used on Windows)."
    required: false
  codesign-identity:
    description: "The codesigning identity (only used on Windows)."
    required: false
  codesign-password:
    description: "The codesigning password for the identity (only used on Windows)."
    required: false

  publish:
    description: "Whether to publish an artifact to the workflow."
    required: false
    default: false

outputs:
  name:
    description: "The file name of the exported project preset."
    value: ${{ inputs.preset-output-name }}
  path:
    description: "The path to the exported project preset."
    value: ${{ steps.artifact.outputs.path }}

runs:
  using: composite

  steps:
    # ----------------------------- Set up Godot ----------------------------- #

    - uses: coffeebeats/godot-infra/.github/actions/setup-godot@main
      with:
        version: ${{ inputs.godot-editor-version }}
        install-dir: ${{ github.workspace }}/.godot

    # TODO: Consider removing this and using the input editor version instead.
    - name: Parse Godot editor version
      uses: "coffeebeats/godot-infra/.github/actions/parse-godot-version@main"
      id: godot-version
      with:
        editor-path: ${{ github.workspace }}/.godot/bin/godot

    - name: Validate Godot source code version
      shell: bash
      env:
        # TODO: If Godot ever releases more than '9' patch versions this will
        # break. That's never happened before, so ignore for now.
        GODOT_VERSION_MIN: 4.2.2
      run: |
        VERSION_ACTUAL="${{ steps.godot-version.outputs.major-minor-patch }}"
        if [[ "$VERSION_ACTUAL" < "${{ env.GODOT_VERSION_MIN }}" ]]; then
          echo "Supplied editor '$VERSION_ACTUAL' less than required minimum: ${{ env.GODOT_VERSION_MIN }}"
          exit 1
        fi

    - name: Copy the Godot project to the expected location
      shell: bash
      run: |
        if [[ $(realpath ${{ inputs.project-path }}) == $(realpath "${{ github.workspace }}/project") ]]; then
          echo "Godot project already located at target directory; exiting without making changes."
          exit 0
        fi

        cp -r $(realpath ${{ inputs.project-path }}) ${{ github.workspace }}/project
        echo "Copied Godot project to target directory: ${{ github.workspace }}/project"

    - name: Copy the Godot editor to the expected location
      shell: bash
      run: |
        EDITOR_PATH="${{ github.workspace }}/.godot/bin/godot"

        if [[ $(realpath "$EDITOR_PATH") == $(realpath "${{ github.workspace }}/godot") ]]; then
          echo "Godot editor already located at target path; exiting without making changes."
          exit 0
        fi

        cp $EDITOR_PATH ${{ github.workspace }}/godot
        echo "Copied Godot editor to target path: ${{ github.workspace }}/godot"

    # ------------------- Install the Godot export template ------------------ #

    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.export-template-artifact-name }}
        path: ${{ github.workspace }}

    - name: Set path to export template in 'export_presets.cfg'
      shell: bash
      run: >-
        ${{ github.workspace }}/godot
        --headless
        --quit
        -s ./export-godot-project-preset/set-export-template-path.gd
        --preset="${{ inputs.preset-name }}"
        --export-presets-path=project/export_presets.cfg
        --template-path="/github/workspace/${{ inputs.export-template-artifact-name }}"

        echo "Set path to export template for preset '${{ inputs.preset-name }}': /github/workspace/${{ inputs.export-template-artifact-name }}"

    - name: Get the platform of the specified preset
      id: preset
      shell: bash
      run: |-
        PLATFORM=$(
          ${{ github.workspace }}/godot \
          --headless \
          --quit \
          -s ./export-godot-project-preset/get-export-preset-platform.gd \
          --preset="${{ inputs.preset-name }}" \
          --export-presets-path=project/export_presets.cfg  \
          | tail -n 1
        )

        echo "platform=$PLATFORM" >> $GITHUB_OUTPUT

        echo "Determined platform for preset '${{ inputs.preset-name }}': $PLATFORM"

    # ----------------------- Export the project preset ---------------------- #

    - name: Create output directory
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/dist

    - name: Export the Godot project preset (MacOS)
      if: steps.preset.outputs.platform == 'macos'
      uses: "coffeebeats/godot-infra/export-godot-project-preset/macos@main"
      with:
        pck-only: ${{ inputs.pck-only }}
        preset-name: ${{ inputs.preset-name }}
        profile: ${{ inputs.profile }}

        godot-editor-path: godot
        godot-export-template-path: ${{ inputs.export-template-artifact-name }}
        preset-output-path: dist/${{ inputs.preset-output-name }}
        project-path: project

        # Encryption secrets
        encryption-key: ${{ inputs.encryption-key }}

        # Codesigning secrets
        codesign-certificate-file: ${{ inputs.codesign-certificate-file }}
        codesign-certificate-password: ${{ inputs.codesign-certificate-password }}
        codesign-provisioning-profile: ${{ inputs.codesign-provisioning-profile }}
        notarization-api-uuid: ${{ inputs.notarization-api-uuid }}
        notarization-api-key: ${{ inputs.notarization-api-key }}
        notarization-api-key-id: ${{ inputs.notarization-api-key-id }}
        notarization-apple-id-name: ${{ inputs.notarization-apple-id-name }}
        notarization-apple-id-password: ${{ inputs.notarization-apple-id-password }}

    - name: Export the Godot project preset (Windows)
      if: steps.preset.outputs.platform == 'windows'
      uses: "coffeebeats/godot-infra/export-godot-project-preset/windows@main"
      with:
        pck-only: ${{ inputs.pck-only }}
        preset-name: ${{ inputs.preset-name }}
        profile: ${{ inputs.profile }}

        godot-editor-path: godot
        godot-export-template-path: ${{ inputs.export-template-artifact-name }}
        preset-output-path: dist/${{ inputs.preset-output-name }}
        project-path: project

        # Encryption secrets
        encryption-key: ${{ inputs.encryption-key }}

        # Codesigning secrets
        codesign-identity-type: ${{ inputs.codesign-identity-type }}
        codesign-identity: ${{ inputs.codesign-identity }}
        codesign-password: ${{ inputs.codesign-password }}

    # ---------------------- Inspect exported artifacts ---------------------- #

    - name: Inspect exported artifacts
      shell: bash
      run: ls -ls $GITHUB_WORKSPACE/dist

    # ---------------------- Publish generated artifacts --------------------- #

    # NOTE: Runnable MacOS exports are directories, which don't get uploaded
    # correctly when the export path is used directly. To handle this case,
    # create a wrapper directory and upload that instead.
    - name: Normalize artifact path
      id: artifact
      shell: bash
      run: |
        ARTIFACT_PATH="${{ github.workspace }}/dist/${{ inputs.preset-output-name }}"

        if [[ -d "$ARTIFACT_PATH" ]]; then
          WRAPPER_DIR="${{ runner.temp }}/dist"

          mkdir "$WRAPPER_DIR"
          sudo mv "$ARTIFACT_PATH" "$WRAPPER_DIR"

          ARTIFACT_PATH="$WRAPPER_DIR"
        fi

        echo "path=$ARTIFACT_PATH" >> $GITHUB_OUTPUT

    # Exported project preset
    - uses: actions/upload-artifact@v4
      if: inputs.publish == 'true'
      with:
        name: ${{ inputs.preset-output-name }}
        path: ${{ steps.artifact.outputs.path }}
        if-no-files-found: error
