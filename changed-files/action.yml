name: "üêô Check: Source code changes"
description: "Checks for source code changes between commits."

inputs:
  head-ref:
    description: "The tree-like git object which will be compared against 'base-ref'."
    required: false
    default: "${{ github.ref }}"
  base-ref:
    description: "The tree-like git object which 'head-ref' will be compared against."
    required: false
    default: "${{ github.event_name == 'pull_request' && github.base_ref || format('{0}~1', github.ref) }}"
  include:
    description: "A file or directory to restrict changed files to (may be a glob expression)."
    required: false
    default: "**"
  exclude:
    description: "A file or directory to exclude from results (may be a glob expression)."
    required: false

outputs:
  changed:
    description: "Whether any files changed."
    value: ${{ steps.diff-tree.outputs.changed }}

runs:
  using: "composite"
  steps:
    - name: Evaluate changed files
      id: diff-tree
      shell: bash
      run: |-
        PATH_FILES_CHANGED="${{ runner.temp }}/changed.txt"

        git diff-tree \
          -r \
          --name-only \
          --output="$PATH_FILES_CHANGED" \
          ${{ inputs.head-ref }} \
          ${{ inputs.base-ref }}

        PY_SCRIPT=$(
        cat <<-EOM
        from fnmatch import fnmatch

        with open('${{ runner.temp }}/changed.txt') as f:
            for line in f:
                if fnmatch(line, "${{ inputs.include }}") and not fnmatch(line, "${{ inputs.exclude }}"):
                    print(line)
        EOM
        )

        CHANGED=$(python3 -c "$PY_SCRIPT")

        echo "files=$CHANGED" >> "$GITHUB_OUTPUT"
        echo "changed=$([[ ! -z "$CHANGED" ]] && echo true)" >> "$GITHUB_OUTPUT"

        rm -f "$PATH_FILES_CHANGED"

    - name: Inspect changed files
      shell: bash
      run: |-
        echo "Changed: ${{ steps.diff-tree.outputs.changed }}"

        echo "\n"
        echo "Changed files:"
        echo "${{ steps.diff-tree.outputs.files }}"
